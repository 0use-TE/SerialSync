@page "/"
@inject ILogger<Home> Logger
@using BlazorAnimate
@using SerialSync.Misc
@using SerialSync.Models
@using Toolbelt.Blazor.Splitter.V2

<CascadingValue Value="this"> 
    <Width xs="12"  Class="pa-4">
        <MudPaper Outlined Style="border:solid 2px">
            <SplitContainer   TSize="int"  Orientation="SplitterOrientation.Vertical" Style="width:100%; height:95vh;" @bind-FirstPaneSize=Layout.FirstPane   UnitOfPaneSize="UnitOfPaneSize.Percent" FirstPaneMinSize="10">
                <FirstPane>
                    <LeftAndRight LogIsRight=!Layout.LogIsRight ></LeftAndRight>
                </FirstPane>
                <SecondPane>
                    <SplitContainer TSize="int" Orientation="SplitterOrientation.Vertical" Style="width:100%; height:100%;" @bind-SecondPaneSize=Layout.SecondPanel SecondPaneMinSize="10" UnitOfPaneSize="UnitOfPaneSize.Percent">
                        <FirstPane>
                            <SplitContainer TSize="int" Orientation="SplitterOrientation.Horizontal" Style="width:100%; height:100%;" @bind-FirstPaneSize=Layout.AcceptAndSend FirstPaneMinSize=20 UnitOfPaneSize="UnitOfPaneSize.Percent">
                                <FirstPane>
                                    <Animate Animation="Animations.FadeDown" DurationMs="600">
                                        <DynamicComponent Type="@(Layout.SendIsTop ? typeof(RegionOfSend) : typeof(RegionOfAcceptance))" />
                                    </Animate>
                                </FirstPane>
                                <SecondPane>
                                    <Animate Animation="Animations.FadeUp" DurationMs="600">
                                        <DynamicComponent Type="@(!Layout.SendIsTop ? typeof(RegionOfSend) : typeof(RegionOfAcceptance))" />
                                    </Animate>
                                </SecondPane>
                            </SplitContainer>
                        </FirstPane>
                        <SecondPane>
                            <LeftAndRight  LogIsRight=Layout.LogIsRight></LeftAndRight>
                        </SecondPane>
                    </SplitContainer>
                </SecondPane>
            </SplitContainer>
        </MudPaper>
    </Width>
</CascadingValue>
@code {

    public LayoutInfo Layout { get; set; } = new LayoutInfo();
    protected override Task OnInitializedAsync()
    {
        Layout=LayoutInfo.Layout;
        return base.OnInitializedAsync();
    }

    public void Save() => LayoutInfo.SaveLayoutInfo(Layout);
    public void Load() => Layout=LayoutInfo.LoadLayoutInfo();
    
    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
    public async Task ReRender()
    {
        Save();
        await InvokeAsync(StateHasChanged);
    }
}
<style>
    .pane-of-split-container {
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .spliter-bar {
        cursor: col-resize;
        border:  outset;
        border-color:lightslategray;
        min-width:10px !important;
        min-height:10px !important;
    }
    .aos-animate {
    width: 100%;
    height: 100%;
}

</style>